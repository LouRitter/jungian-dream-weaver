-- Create the dreams table with privacy support for future user accounts
CREATE TABLE public.dreams (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  title TEXT,
  summary TEXT,
  interpretation TEXT,
  reflection_question TEXT,
  identified_symbols JSONB,
  identified_archetypes JSONB,
  is_private BOOLEAN DEFAULT false NOT NULL,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  dream_text TEXT -- Store the original dream text for reference
);

-- Enable Row Level Security
ALTER TABLE public.dreams ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows public read access to non-private dreams
CREATE POLICY "Public dreams are viewable by everyone."
ON public.dreams FOR SELECT
USING (is_private = false);

-- Create a policy that allows users to view their own private dreams
CREATE POLICY "Users can view their own private dreams."
ON public.dreams FOR SELECT
USING (auth.uid() = user_id);

-- Create a policy that allows anyone to insert dreams (for now)
-- This will be updated when user authentication is implemented
CREATE POLICY "Anyone can insert dreams."
ON public.dreams FOR INSERT
WITH CHECK (true);

-- Create a policy that allows users to update their own dreams
CREATE POLICY "Users can update their own dreams."
ON public.dreams FOR UPDATE
USING (auth.uid() = user_id);

-- Create a policy that allows users to delete their own dreams
CREATE POLICY "Users can delete their own dreams."
ON public.dreams FOR DELETE
USING (auth.uid() = user_id);

-- Create an index for better performance on public dreams
CREATE INDEX idx_dreams_public_recent ON public.dreams (created_at DESC) WHERE is_private = false;

-- Create an index for user's dreams
CREATE INDEX idx_dreams_user_recent ON public.dreams (user_id, created_at DESC);
